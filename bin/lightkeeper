#!/usr/bin/env python
import os, sys
import encodings.idna
import argparse
import time
import pymongo
import socket

try:
    import pharos
except ImportError:
    # in host, add python paths
    sys.path.append('../src/python')
    import pharos


def main(args):
    host = 'localhost'
    try:
        # get host docker0 bridge ip: ex->172.17.42.1
        host = os.environ['BRIDGE_IP']
    except KeyError:
        host = '172.17.42.1'

    hostname = socket.gethostname()
    if os.path.exists('/.dockerinit'):
        # in docker container, change root directory
        hostname = os.environ['DOCKER_HOST']
        os.chroot('/pharos')
    mongo = pymongo.MongoClient(host, args.mongos_port)
    metrics_col = mongo.pharos.metrics

    while True:
        client = pharos.PharosClient(host)
        containers = client.containers()
        
        for container in containers:
            rec = {'hostname': hostname, 'id': container.id, 'image': container.image,
                'status': container.status, 'name': container.name}
            metric = container.get_metric()
            rec['metrics'] = list(container.get_metric())
            metrics_col.update({'id': container.id}, rec, True)
        time.sleep(args.interval)
    
if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('-i', '--interval', type=int, default=1, help='collect metrics interval')
    parser.add_argument('--mongos_port', type=int, default=27017, help='mongos port')
    args = parser.parse_args()
    main(args)
